SET SERVEROUTPUT ON; -- 스크립트 출력창에도 나타남
SET SERVEROUTPUT OFF;

begin
    DBMS_OUTPUT.PUT_LINE('HELLO, WORLD');
    DBMS_OUTPUT.PUT_LINE('HELLO, WORLD2');
    DBMS_OUTPUT.PUT_LINE('HELLO, WORLD3');
    DBMS_OUTPUT.PUT_LINE('HELLO, WORLD4');
    DBMS_OUTPUT.PUT_LINE('');
end;
/
DECLARE
    EMP_ID NUMBER;
    EMP_NAME VARCHAR2(30);
BEGIN
    emp_id:=888;
    emp_name:='배장남';
    DBMS_OUTPUT.PUT_LINE('EMP_ID:'||EMP_ID);
    DBMS_OUTPUT.PUT_LINE('EMP_NAME:'||EMP_NAME);
END;
/

DECLARE
    EMP_ID EMPLOYEE.EMP_ID%TYPE;
    EMP_NAME EMPLOYEE.EMP_NAME%TYPE;
BEGIN 
    SELECT EMP_ID, EMP_NAME
    INTO EMP_ID, EMP_NAME
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMP_ID';
    DBMS_OUTPUT.PUT_LINE('EMP_ID:'||EMP_ID);
    DBMS_OUTPUT.PUT_LINE('EMP_NAME:'||EMP_NAME);
END;
/

DECLARE
    E EMPLOYEE%ROWTYPE;
BEGIN 
    SELECT * INTO E
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMP_ID';
    DBMS_OUTPUT.PUT_LINE('EMP_ID:'||E.EMP_ID);
    DBMS_OUTPUT.PUT_LINE('EMP_NAME:'||E.EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('EMP_NO:'||E.EMP_NO);
    DBMS_OUTPUT.PUT_LINE('SALARY:'||E.SALARY);
END;
/

create or replace NONEDITIONABLE procedure pro_dept_insert
--DECLARE
is
    maxdo dept.deptno%type;
    dno dept.deptno%type;
--    dno dept.deptno%type;
--    dnm dept.deptname%type;
--    dloc dept.loc%type;
BEGIN
--    insert into dept values('&deptno','&부서명','&지역');
    select MAX(deptno) into maxdno from dept;
    insert into dept (dname, deptno, loc) values('EJ5', maxdno+1, '서울');
    insert into dept (dname, deptno, loc) values('EJ5', maxdno+2, '서울');
    COMMIT;
END;
/
select * from user_procedures;

-- ROWTYPE
DECLARE
    E EMPLOYEE%ROWTYPE;
BEGIN
    SELECT * INTO E
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMP_ID';
    DBMS_OUTPUT.PUT_LINE('EMP_ID:'||E.EMP_ID);
    DBMS_OUTPUT.PUT_LINE('EMP_NAME:'||E.EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('EMP_NO:'||E.EMP_NO);
    DBMS_OUTPUT.PUT_LINE('SALARY:'||E.SALARY);
END;
/

-- 타입변수선언, 테이블 타입의 변수 선언과 초기화, 변수 값 출력
DECLARE
    TYPE EMP_ID_TABLE_TYPE IS TABLE OF EMPLOYEE.EMP_ID%TYPE
    INDEX BY BINARY_INTEGER;
    TYPE EMP_NAME_TABLE_TYPE IS TABLE OF EMPLOYEE.EMP_NAME%TYPE
    INDEX BY BINARY_INTEGER;
    
    EMP_ID_TABLE EMP_ID_TABLE_TYPE;
    EMP_NAME_TABLE EMP_NAME_TABLE_TYPE;

    I BINARY_INTEGER := 0;
    
BEGIN 
    FOR K IN(SELECT EMP_ID, EMP_NAME, FROM EMPLOYEE)LOOP
            I := I+1;
            EMP_ID_TABLE(I):=K.EMP_ID;
            EMP_NAME_TABLE(I):= K.EMP_NAME;
    END LOOP;
    FOR J IN 1..I LOOP
                    DBMS_OUTPUT.PUT_LINE('EMP_ID:'||EMP_ID_TABLE(J)||'ENP_NAME:'||EMP_NAME_TABLE(J));
    END LOOP;
END;
/

DECLARE
    TYPE EMP_RECORD_TYPE IS RECORD(
                EMP_ID EMPLOYEE.EMP_ID%TYPE,
                EMP_NAME EMPLOYEE.EMP_NAME%TYPE,
                DEPT_TITLE DEPARTMENT.DEPT_TITLE%TYPE,
                JOB_NAME JOB.JOB_NAME%TYPE
                );
    EMP_RECORD EMP_RECORD_TYPE;
BEGIN 
    SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME INTO EMP_RECORD
    FROM EMPLOYEE E, DEPARTMENT D, JOB J
    WHERE E.DEPT_CODE = D.DEPT_ID
        AND E.JOB_CODE = J.JOB_CODE
        AND EMP_NAME = '&EMP_NAME';

    DBMS_OUTPUT.PUT_LINE('사번:'||EMP_RECORD.EMP_ID);
    DBMS_OUTPUT.PUT_LINE('이름:'||EMP_RECORD.EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('부서:'||EMP_RECORD.DEPT_TITLE);
    DBMS_OUTPUT.PUT_LINE('직급1:'||EMP_RECORD.JOB_NAME);
END;
/

-- 선택문 IF~THEN~END IF
DECLARE 
    EMP_ID EMPLOYEE.EMP_ID%TYPE;
    EMP_NAME EMPLOYEE.EMP_NAME%TYPE;
    SALARY EMPLOYEE.SALARY%TYPE;
    BONUS EMPLOYEE.BONUS%TYPE;
BEGIN 
    SELECT EMP_ID, EMP_NAME, SALARY, NVL(BONUS, 0)
    INTO EMP_ID, EMP_NAME, SALARY, BONUS
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMP_ID';
    
    DBMS_OUTPUT.PUT_LINE('사번:'||EMP_ID);
    DBMS_OUTPUT.PUT_LINE('이름:'||EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('급여:'||SALARY);
    
    IF(BONUS = 0) THEN DBMS_OUTPUT.PUT_LINE('보너스를 지급받지 않는 사람입니다.');
    END IF;
    DBMS_OUTPUT.PUT_LINE('보너스율:'||BONUS*100||'%');
END;
/

-- 선택문 IF~THEN~ELSE~END IF
DECLARE 
    EMP_ID EMPLOYEE.EMP_ID%TYPE;
    EMP_NAME EMPLOYEE.EMP_NAME%TYPE;
    DEPT_TITLE DEPARTMENT.DEPT_TITLE%TYPE;
    NATIONAL_CODE LOCATION.NATIONAL_CODE%TYPE;
    TEAM VARCHAR2(20);

BEGIN 
    SELECT EMP_ID, EMP_NAME, DEPT_TITLE, NATIONAL_CODE
    INTO EMP_ID, EMP_NAME, DEPT_TITLE, NATIONAL_CODE
    FROM EMPLOYEE E, DEPARTMENT D, LOCATION L
    WHERE E.DEPT_CODE=D.DEPT_ID
        AND D.LOCATION_ID = L.LOCAL_CODE
        AND EMP_ID = '&EMP_ID';
    
    IF(NATIONAL_CODE = 'KO') THEN TEAM:='국내팀';
    ELSE TEAM:='해외팀';
    END IF;
    DBMS_OUTPUT.PUT_LINE('사번:'||EMP_ID);
    DBMS_OUTPUT.PUT_LINE('이름:'||EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('부서:'||DEPT_TITLE);
    DBMS_OUTPUT.PUT_LINE('소속:'||TEAM);

END;
/